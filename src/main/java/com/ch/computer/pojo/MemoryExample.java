package com.ch.computer.pojo;

import java.util.ArrayList;
import java.util.List;

public class MemoryExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table memory
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table memory
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table memory
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table memory
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public MemoryExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table memory
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table memory
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table memory
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table memory
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table memory
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table memory
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table memory
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table memory
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table memory
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table memory
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table memory
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andMIdIsNull() {
            addCriterion("m_id is null");
            return (Criteria) this;
        }

        public Criteria andMIdIsNotNull() {
            addCriterion("m_id is not null");
            return (Criteria) this;
        }

        public Criteria andMIdEqualTo(Integer value) {
            addCriterion("m_id =", value, "mId");
            return (Criteria) this;
        }

        public Criteria andMIdNotEqualTo(Integer value) {
            addCriterion("m_id <>", value, "mId");
            return (Criteria) this;
        }

        public Criteria andMIdGreaterThan(Integer value) {
            addCriterion("m_id >", value, "mId");
            return (Criteria) this;
        }

        public Criteria andMIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("m_id >=", value, "mId");
            return (Criteria) this;
        }

        public Criteria andMIdLessThan(Integer value) {
            addCriterion("m_id <", value, "mId");
            return (Criteria) this;
        }

        public Criteria andMIdLessThanOrEqualTo(Integer value) {
            addCriterion("m_id <=", value, "mId");
            return (Criteria) this;
        }

        public Criteria andMIdIn(List<Integer> values) {
            addCriterion("m_id in", values, "mId");
            return (Criteria) this;
        }

        public Criteria andMIdNotIn(List<Integer> values) {
            addCriterion("m_id not in", values, "mId");
            return (Criteria) this;
        }

        public Criteria andMIdBetween(Integer value1, Integer value2) {
            addCriterion("m_id between", value1, value2, "mId");
            return (Criteria) this;
        }

        public Criteria andMIdNotBetween(Integer value1, Integer value2) {
            addCriterion("m_id not between", value1, value2, "mId");
            return (Criteria) this;
        }

        public Criteria andMNameIsNull() {
            addCriterion("m_name is null");
            return (Criteria) this;
        }

        public Criteria andMNameIsNotNull() {
            addCriterion("m_name is not null");
            return (Criteria) this;
        }

        public Criteria andMNameEqualTo(String value) {
            addCriterion("m_name =", value, "mName");
            return (Criteria) this;
        }

        public Criteria andMNameNotEqualTo(String value) {
            addCriterion("m_name <>", value, "mName");
            return (Criteria) this;
        }

        public Criteria andMNameGreaterThan(String value) {
            addCriterion("m_name >", value, "mName");
            return (Criteria) this;
        }

        public Criteria andMNameGreaterThanOrEqualTo(String value) {
            addCriterion("m_name >=", value, "mName");
            return (Criteria) this;
        }

        public Criteria andMNameLessThan(String value) {
            addCriterion("m_name <", value, "mName");
            return (Criteria) this;
        }

        public Criteria andMNameLessThanOrEqualTo(String value) {
            addCriterion("m_name <=", value, "mName");
            return (Criteria) this;
        }

        public Criteria andMNameLike(String value) {
            addCriterion("m_name like", value, "mName");
            return (Criteria) this;
        }

        public Criteria andMNameNotLike(String value) {
            addCriterion("m_name not like", value, "mName");
            return (Criteria) this;
        }

        public Criteria andMNameIn(List<String> values) {
            addCriterion("m_name in", values, "mName");
            return (Criteria) this;
        }

        public Criteria andMNameNotIn(List<String> values) {
            addCriterion("m_name not in", values, "mName");
            return (Criteria) this;
        }

        public Criteria andMNameBetween(String value1, String value2) {
            addCriterion("m_name between", value1, value2, "mName");
            return (Criteria) this;
        }

        public Criteria andMNameNotBetween(String value1, String value2) {
            addCriterion("m_name not between", value1, value2, "mName");
            return (Criteria) this;
        }

        public Criteria andMFactoryIsNull() {
            addCriterion("m_factory is null");
            return (Criteria) this;
        }

        public Criteria andMFactoryIsNotNull() {
            addCriterion("m_factory is not null");
            return (Criteria) this;
        }

        public Criteria andMFactoryEqualTo(String value) {
            addCriterion("m_factory =", value, "mFactory");
            return (Criteria) this;
        }

        public Criteria andMFactoryNotEqualTo(String value) {
            addCriterion("m_factory <>", value, "mFactory");
            return (Criteria) this;
        }

        public Criteria andMFactoryGreaterThan(String value) {
            addCriterion("m_factory >", value, "mFactory");
            return (Criteria) this;
        }

        public Criteria andMFactoryGreaterThanOrEqualTo(String value) {
            addCriterion("m_factory >=", value, "mFactory");
            return (Criteria) this;
        }

        public Criteria andMFactoryLessThan(String value) {
            addCriterion("m_factory <", value, "mFactory");
            return (Criteria) this;
        }

        public Criteria andMFactoryLessThanOrEqualTo(String value) {
            addCriterion("m_factory <=", value, "mFactory");
            return (Criteria) this;
        }

        public Criteria andMFactoryLike(String value) {
            addCriterion("m_factory like", value, "mFactory");
            return (Criteria) this;
        }

        public Criteria andMFactoryNotLike(String value) {
            addCriterion("m_factory not like", value, "mFactory");
            return (Criteria) this;
        }

        public Criteria andMFactoryIn(List<String> values) {
            addCriterion("m_factory in", values, "mFactory");
            return (Criteria) this;
        }

        public Criteria andMFactoryNotIn(List<String> values) {
            addCriterion("m_factory not in", values, "mFactory");
            return (Criteria) this;
        }

        public Criteria andMFactoryBetween(String value1, String value2) {
            addCriterion("m_factory between", value1, value2, "mFactory");
            return (Criteria) this;
        }

        public Criteria andMFactoryNotBetween(String value1, String value2) {
            addCriterion("m_factory not between", value1, value2, "mFactory");
            return (Criteria) this;
        }

        public Criteria andMParamIsNull() {
            addCriterion("m_param is null");
            return (Criteria) this;
        }

        public Criteria andMParamIsNotNull() {
            addCriterion("m_param is not null");
            return (Criteria) this;
        }

        public Criteria andMParamEqualTo(String value) {
            addCriterion("m_param =", value, "mParam");
            return (Criteria) this;
        }

        public Criteria andMParamNotEqualTo(String value) {
            addCriterion("m_param <>", value, "mParam");
            return (Criteria) this;
        }

        public Criteria andMParamGreaterThan(String value) {
            addCriterion("m_param >", value, "mParam");
            return (Criteria) this;
        }

        public Criteria andMParamGreaterThanOrEqualTo(String value) {
            addCriterion("m_param >=", value, "mParam");
            return (Criteria) this;
        }

        public Criteria andMParamLessThan(String value) {
            addCriterion("m_param <", value, "mParam");
            return (Criteria) this;
        }

        public Criteria andMParamLessThanOrEqualTo(String value) {
            addCriterion("m_param <=", value, "mParam");
            return (Criteria) this;
        }

        public Criteria andMParamLike(String value) {
            addCriterion("m_param like", value, "mParam");
            return (Criteria) this;
        }

        public Criteria andMParamNotLike(String value) {
            addCriterion("m_param not like", value, "mParam");
            return (Criteria) this;
        }

        public Criteria andMParamIn(List<String> values) {
            addCriterion("m_param in", values, "mParam");
            return (Criteria) this;
        }

        public Criteria andMParamNotIn(List<String> values) {
            addCriterion("m_param not in", values, "mParam");
            return (Criteria) this;
        }

        public Criteria andMParamBetween(String value1, String value2) {
            addCriterion("m_param between", value1, value2, "mParam");
            return (Criteria) this;
        }

        public Criteria andMParamNotBetween(String value1, String value2) {
            addCriterion("m_param not between", value1, value2, "mParam");
            return (Criteria) this;
        }

        public Criteria andMPriceIsNull() {
            addCriterion("m_price is null");
            return (Criteria) this;
        }

        public Criteria andMPriceIsNotNull() {
            addCriterion("m_price is not null");
            return (Criteria) this;
        }

        public Criteria andMPriceEqualTo(Double value) {
            addCriterion("m_price =", value, "mPrice");
            return (Criteria) this;
        }

        public Criteria andMPriceNotEqualTo(Double value) {
            addCriterion("m_price <>", value, "mPrice");
            return (Criteria) this;
        }

        public Criteria andMPriceGreaterThan(Double value) {
            addCriterion("m_price >", value, "mPrice");
            return (Criteria) this;
        }

        public Criteria andMPriceGreaterThanOrEqualTo(Double value) {
            addCriterion("m_price >=", value, "mPrice");
            return (Criteria) this;
        }

        public Criteria andMPriceLessThan(Double value) {
            addCriterion("m_price <", value, "mPrice");
            return (Criteria) this;
        }

        public Criteria andMPriceLessThanOrEqualTo(Double value) {
            addCriterion("m_price <=", value, "mPrice");
            return (Criteria) this;
        }

        public Criteria andMPriceIn(List<Double> values) {
            addCriterion("m_price in", values, "mPrice");
            return (Criteria) this;
        }

        public Criteria andMPriceNotIn(List<Double> values) {
            addCriterion("m_price not in", values, "mPrice");
            return (Criteria) this;
        }

        public Criteria andMPriceBetween(Double value1, Double value2) {
            addCriterion("m_price between", value1, value2, "mPrice");
            return (Criteria) this;
        }

        public Criteria andMPriceNotBetween(Double value1, Double value2) {
            addCriterion("m_price not between", value1, value2, "mPrice");
            return (Criteria) this;
        }

        public Criteria andMInventoryIsNull() {
            addCriterion("m_inventory is null");
            return (Criteria) this;
        }

        public Criteria andMInventoryIsNotNull() {
            addCriterion("m_inventory is not null");
            return (Criteria) this;
        }

        public Criteria andMInventoryEqualTo(Integer value) {
            addCriterion("m_inventory =", value, "mInventory");
            return (Criteria) this;
        }

        public Criteria andMInventoryNotEqualTo(Integer value) {
            addCriterion("m_inventory <>", value, "mInventory");
            return (Criteria) this;
        }

        public Criteria andMInventoryGreaterThan(Integer value) {
            addCriterion("m_inventory >", value, "mInventory");
            return (Criteria) this;
        }

        public Criteria andMInventoryGreaterThanOrEqualTo(Integer value) {
            addCriterion("m_inventory >=", value, "mInventory");
            return (Criteria) this;
        }

        public Criteria andMInventoryLessThan(Integer value) {
            addCriterion("m_inventory <", value, "mInventory");
            return (Criteria) this;
        }

        public Criteria andMInventoryLessThanOrEqualTo(Integer value) {
            addCriterion("m_inventory <=", value, "mInventory");
            return (Criteria) this;
        }

        public Criteria andMInventoryIn(List<Integer> values) {
            addCriterion("m_inventory in", values, "mInventory");
            return (Criteria) this;
        }

        public Criteria andMInventoryNotIn(List<Integer> values) {
            addCriterion("m_inventory not in", values, "mInventory");
            return (Criteria) this;
        }

        public Criteria andMInventoryBetween(Integer value1, Integer value2) {
            addCriterion("m_inventory between", value1, value2, "mInventory");
            return (Criteria) this;
        }

        public Criteria andMInventoryNotBetween(Integer value1, Integer value2) {
            addCriterion("m_inventory not between", value1, value2, "mInventory");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table memory
     *
     * @mbggenerated do_not_delete_during_merge Mon Aug 07 22:26:32 CST 2023
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table memory
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}