package com.ch.computer.pojo;

import java.util.ArrayList;
import java.util.List;

public class CpuExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cpu
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cpu
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cpu
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cpu
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public CpuExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cpu
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cpu
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cpu
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cpu
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cpu
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cpu
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cpu
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cpu
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cpu
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cpu
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table cpu
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCIdIsNull() {
            addCriterion("c_id is null");
            return (Criteria) this;
        }

        public Criteria andCIdIsNotNull() {
            addCriterion("c_id is not null");
            return (Criteria) this;
        }

        public Criteria andCIdEqualTo(Integer value) {
            addCriterion("c_id =", value, "cId");
            return (Criteria) this;
        }

        public Criteria andCIdNotEqualTo(Integer value) {
            addCriterion("c_id <>", value, "cId");
            return (Criteria) this;
        }

        public Criteria andCIdGreaterThan(Integer value) {
            addCriterion("c_id >", value, "cId");
            return (Criteria) this;
        }

        public Criteria andCIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("c_id >=", value, "cId");
            return (Criteria) this;
        }

        public Criteria andCIdLessThan(Integer value) {
            addCriterion("c_id <", value, "cId");
            return (Criteria) this;
        }

        public Criteria andCIdLessThanOrEqualTo(Integer value) {
            addCriterion("c_id <=", value, "cId");
            return (Criteria) this;
        }

        public Criteria andCIdIn(List<Integer> values) {
            addCriterion("c_id in", values, "cId");
            return (Criteria) this;
        }

        public Criteria andCIdNotIn(List<Integer> values) {
            addCriterion("c_id not in", values, "cId");
            return (Criteria) this;
        }

        public Criteria andCIdBetween(Integer value1, Integer value2) {
            addCriterion("c_id between", value1, value2, "cId");
            return (Criteria) this;
        }

        public Criteria andCIdNotBetween(Integer value1, Integer value2) {
            addCriterion("c_id not between", value1, value2, "cId");
            return (Criteria) this;
        }

        public Criteria andCNameIsNull() {
            addCriterion("c_name is null");
            return (Criteria) this;
        }

        public Criteria andCNameIsNotNull() {
            addCriterion("c_name is not null");
            return (Criteria) this;
        }

        public Criteria andCNameEqualTo(String value) {
            addCriterion("c_name =", value, "cName");
            return (Criteria) this;
        }

        public Criteria andCNameNotEqualTo(String value) {
            addCriterion("c_name <>", value, "cName");
            return (Criteria) this;
        }

        public Criteria andCNameGreaterThan(String value) {
            addCriterion("c_name >", value, "cName");
            return (Criteria) this;
        }

        public Criteria andCNameGreaterThanOrEqualTo(String value) {
            addCriterion("c_name >=", value, "cName");
            return (Criteria) this;
        }

        public Criteria andCNameLessThan(String value) {
            addCriterion("c_name <", value, "cName");
            return (Criteria) this;
        }

        public Criteria andCNameLessThanOrEqualTo(String value) {
            addCriterion("c_name <=", value, "cName");
            return (Criteria) this;
        }

        public Criteria andCNameLike(String value) {
            addCriterion("c_name like", value, "cName");
            return (Criteria) this;
        }

        public Criteria andCNameNotLike(String value) {
            addCriterion("c_name not like", value, "cName");
            return (Criteria) this;
        }

        public Criteria andCNameIn(List<String> values) {
            addCriterion("c_name in", values, "cName");
            return (Criteria) this;
        }

        public Criteria andCNameNotIn(List<String> values) {
            addCriterion("c_name not in", values, "cName");
            return (Criteria) this;
        }

        public Criteria andCNameBetween(String value1, String value2) {
            addCriterion("c_name between", value1, value2, "cName");
            return (Criteria) this;
        }

        public Criteria andCNameNotBetween(String value1, String value2) {
            addCriterion("c_name not between", value1, value2, "cName");
            return (Criteria) this;
        }

        public Criteria andCFactoryIsNull() {
            addCriterion("c_factory is null");
            return (Criteria) this;
        }

        public Criteria andCFactoryIsNotNull() {
            addCriterion("c_factory is not null");
            return (Criteria) this;
        }

        public Criteria andCFactoryEqualTo(String value) {
            addCriterion("c_factory =", value, "cFactory");
            return (Criteria) this;
        }

        public Criteria andCFactoryNotEqualTo(String value) {
            addCriterion("c_factory <>", value, "cFactory");
            return (Criteria) this;
        }

        public Criteria andCFactoryGreaterThan(String value) {
            addCriterion("c_factory >", value, "cFactory");
            return (Criteria) this;
        }

        public Criteria andCFactoryGreaterThanOrEqualTo(String value) {
            addCriterion("c_factory >=", value, "cFactory");
            return (Criteria) this;
        }

        public Criteria andCFactoryLessThan(String value) {
            addCriterion("c_factory <", value, "cFactory");
            return (Criteria) this;
        }

        public Criteria andCFactoryLessThanOrEqualTo(String value) {
            addCriterion("c_factory <=", value, "cFactory");
            return (Criteria) this;
        }

        public Criteria andCFactoryLike(String value) {
            addCriterion("c_factory like", value, "cFactory");
            return (Criteria) this;
        }

        public Criteria andCFactoryNotLike(String value) {
            addCriterion("c_factory not like", value, "cFactory");
            return (Criteria) this;
        }

        public Criteria andCFactoryIn(List<String> values) {
            addCriterion("c_factory in", values, "cFactory");
            return (Criteria) this;
        }

        public Criteria andCFactoryNotIn(List<String> values) {
            addCriterion("c_factory not in", values, "cFactory");
            return (Criteria) this;
        }

        public Criteria andCFactoryBetween(String value1, String value2) {
            addCriterion("c_factory between", value1, value2, "cFactory");
            return (Criteria) this;
        }

        public Criteria andCFactoryNotBetween(String value1, String value2) {
            addCriterion("c_factory not between", value1, value2, "cFactory");
            return (Criteria) this;
        }

        public Criteria andCParamIsNull() {
            addCriterion("c_param is null");
            return (Criteria) this;
        }

        public Criteria andCParamIsNotNull() {
            addCriterion("c_param is not null");
            return (Criteria) this;
        }

        public Criteria andCParamEqualTo(String value) {
            addCriterion("c_param =", value, "cParam");
            return (Criteria) this;
        }

        public Criteria andCParamNotEqualTo(String value) {
            addCriterion("c_param <>", value, "cParam");
            return (Criteria) this;
        }

        public Criteria andCParamGreaterThan(String value) {
            addCriterion("c_param >", value, "cParam");
            return (Criteria) this;
        }

        public Criteria andCParamGreaterThanOrEqualTo(String value) {
            addCriterion("c_param >=", value, "cParam");
            return (Criteria) this;
        }

        public Criteria andCParamLessThan(String value) {
            addCriterion("c_param <", value, "cParam");
            return (Criteria) this;
        }

        public Criteria andCParamLessThanOrEqualTo(String value) {
            addCriterion("c_param <=", value, "cParam");
            return (Criteria) this;
        }

        public Criteria andCParamLike(String value) {
            addCriterion("c_param like", value, "cParam");
            return (Criteria) this;
        }

        public Criteria andCParamNotLike(String value) {
            addCriterion("c_param not like", value, "cParam");
            return (Criteria) this;
        }

        public Criteria andCParamIn(List<String> values) {
            addCriterion("c_param in", values, "cParam");
            return (Criteria) this;
        }

        public Criteria andCParamNotIn(List<String> values) {
            addCriterion("c_param not in", values, "cParam");
            return (Criteria) this;
        }

        public Criteria andCParamBetween(String value1, String value2) {
            addCriterion("c_param between", value1, value2, "cParam");
            return (Criteria) this;
        }

        public Criteria andCParamNotBetween(String value1, String value2) {
            addCriterion("c_param not between", value1, value2, "cParam");
            return (Criteria) this;
        }

        public Criteria andCPriceIsNull() {
            addCriterion("c_price is null");
            return (Criteria) this;
        }

        public Criteria andCPriceIsNotNull() {
            addCriterion("c_price is not null");
            return (Criteria) this;
        }

        public Criteria andCPriceEqualTo(Double value) {
            addCriterion("c_price =", value, "cPrice");
            return (Criteria) this;
        }

        public Criteria andCPriceNotEqualTo(Double value) {
            addCriterion("c_price <>", value, "cPrice");
            return (Criteria) this;
        }

        public Criteria andCPriceGreaterThan(Double value) {
            addCriterion("c_price >", value, "cPrice");
            return (Criteria) this;
        }

        public Criteria andCPriceGreaterThanOrEqualTo(Double value) {
            addCriterion("c_price >=", value, "cPrice");
            return (Criteria) this;
        }

        public Criteria andCPriceLessThan(Double value) {
            addCriterion("c_price <", value, "cPrice");
            return (Criteria) this;
        }

        public Criteria andCPriceLessThanOrEqualTo(Double value) {
            addCriterion("c_price <=", value, "cPrice");
            return (Criteria) this;
        }

        public Criteria andCPriceIn(List<Double> values) {
            addCriterion("c_price in", values, "cPrice");
            return (Criteria) this;
        }

        public Criteria andCPriceNotIn(List<Double> values) {
            addCriterion("c_price not in", values, "cPrice");
            return (Criteria) this;
        }

        public Criteria andCPriceBetween(Double value1, Double value2) {
            addCriterion("c_price between", value1, value2, "cPrice");
            return (Criteria) this;
        }

        public Criteria andCPriceNotBetween(Double value1, Double value2) {
            addCriterion("c_price not between", value1, value2, "cPrice");
            return (Criteria) this;
        }

        public Criteria andCInventoryIsNull() {
            addCriterion("c_inventory is null");
            return (Criteria) this;
        }

        public Criteria andCInventoryIsNotNull() {
            addCriterion("c_inventory is not null");
            return (Criteria) this;
        }

        public Criteria andCInventoryEqualTo(Integer value) {
            addCriterion("c_inventory =", value, "cInventory");
            return (Criteria) this;
        }

        public Criteria andCInventoryNotEqualTo(Integer value) {
            addCriterion("c_inventory <>", value, "cInventory");
            return (Criteria) this;
        }

        public Criteria andCInventoryGreaterThan(Integer value) {
            addCriterion("c_inventory >", value, "cInventory");
            return (Criteria) this;
        }

        public Criteria andCInventoryGreaterThanOrEqualTo(Integer value) {
            addCriterion("c_inventory >=", value, "cInventory");
            return (Criteria) this;
        }

        public Criteria andCInventoryLessThan(Integer value) {
            addCriterion("c_inventory <", value, "cInventory");
            return (Criteria) this;
        }

        public Criteria andCInventoryLessThanOrEqualTo(Integer value) {
            addCriterion("c_inventory <=", value, "cInventory");
            return (Criteria) this;
        }

        public Criteria andCInventoryIn(List<Integer> values) {
            addCriterion("c_inventory in", values, "cInventory");
            return (Criteria) this;
        }

        public Criteria andCInventoryNotIn(List<Integer> values) {
            addCriterion("c_inventory not in", values, "cInventory");
            return (Criteria) this;
        }

        public Criteria andCInventoryBetween(Integer value1, Integer value2) {
            addCriterion("c_inventory between", value1, value2, "cInventory");
            return (Criteria) this;
        }

        public Criteria andCInventoryNotBetween(Integer value1, Integer value2) {
            addCriterion("c_inventory not between", value1, value2, "cInventory");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table cpu
     *
     * @mbggenerated do_not_delete_during_merge Mon Aug 07 22:26:32 CST 2023
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table cpu
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}