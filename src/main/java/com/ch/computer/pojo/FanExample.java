package com.ch.computer.pojo;

import java.util.ArrayList;
import java.util.List;

public class FanExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fan
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fan
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fan
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fan
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public FanExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fan
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fan
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fan
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fan
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fan
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fan
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fan
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fan
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fan
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fan
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fan
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andFIdIsNull() {
            addCriterion("f_id is null");
            return (Criteria) this;
        }

        public Criteria andFIdIsNotNull() {
            addCriterion("f_id is not null");
            return (Criteria) this;
        }

        public Criteria andFIdEqualTo(Integer value) {
            addCriterion("f_id =", value, "fId");
            return (Criteria) this;
        }

        public Criteria andFIdNotEqualTo(Integer value) {
            addCriterion("f_id <>", value, "fId");
            return (Criteria) this;
        }

        public Criteria andFIdGreaterThan(Integer value) {
            addCriterion("f_id >", value, "fId");
            return (Criteria) this;
        }

        public Criteria andFIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("f_id >=", value, "fId");
            return (Criteria) this;
        }

        public Criteria andFIdLessThan(Integer value) {
            addCriterion("f_id <", value, "fId");
            return (Criteria) this;
        }

        public Criteria andFIdLessThanOrEqualTo(Integer value) {
            addCriterion("f_id <=", value, "fId");
            return (Criteria) this;
        }

        public Criteria andFIdIn(List<Integer> values) {
            addCriterion("f_id in", values, "fId");
            return (Criteria) this;
        }

        public Criteria andFIdNotIn(List<Integer> values) {
            addCriterion("f_id not in", values, "fId");
            return (Criteria) this;
        }

        public Criteria andFIdBetween(Integer value1, Integer value2) {
            addCriterion("f_id between", value1, value2, "fId");
            return (Criteria) this;
        }

        public Criteria andFIdNotBetween(Integer value1, Integer value2) {
            addCriterion("f_id not between", value1, value2, "fId");
            return (Criteria) this;
        }

        public Criteria andFNameIsNull() {
            addCriterion("f_name is null");
            return (Criteria) this;
        }

        public Criteria andFNameIsNotNull() {
            addCriterion("f_name is not null");
            return (Criteria) this;
        }

        public Criteria andFNameEqualTo(String value) {
            addCriterion("f_name =", value, "fName");
            return (Criteria) this;
        }

        public Criteria andFNameNotEqualTo(String value) {
            addCriterion("f_name <>", value, "fName");
            return (Criteria) this;
        }

        public Criteria andFNameGreaterThan(String value) {
            addCriterion("f_name >", value, "fName");
            return (Criteria) this;
        }

        public Criteria andFNameGreaterThanOrEqualTo(String value) {
            addCriterion("f_name >=", value, "fName");
            return (Criteria) this;
        }

        public Criteria andFNameLessThan(String value) {
            addCriterion("f_name <", value, "fName");
            return (Criteria) this;
        }

        public Criteria andFNameLessThanOrEqualTo(String value) {
            addCriterion("f_name <=", value, "fName");
            return (Criteria) this;
        }

        public Criteria andFNameLike(String value) {
            addCriterion("f_name like", value, "fName");
            return (Criteria) this;
        }

        public Criteria andFNameNotLike(String value) {
            addCriterion("f_name not like", value, "fName");
            return (Criteria) this;
        }

        public Criteria andFNameIn(List<String> values) {
            addCriterion("f_name in", values, "fName");
            return (Criteria) this;
        }

        public Criteria andFNameNotIn(List<String> values) {
            addCriterion("f_name not in", values, "fName");
            return (Criteria) this;
        }

        public Criteria andFNameBetween(String value1, String value2) {
            addCriterion("f_name between", value1, value2, "fName");
            return (Criteria) this;
        }

        public Criteria andFNameNotBetween(String value1, String value2) {
            addCriterion("f_name not between", value1, value2, "fName");
            return (Criteria) this;
        }

        public Criteria andFFactoryIsNull() {
            addCriterion("f_factory is null");
            return (Criteria) this;
        }

        public Criteria andFFactoryIsNotNull() {
            addCriterion("f_factory is not null");
            return (Criteria) this;
        }

        public Criteria andFFactoryEqualTo(String value) {
            addCriterion("f_factory =", value, "fFactory");
            return (Criteria) this;
        }

        public Criteria andFFactoryNotEqualTo(String value) {
            addCriterion("f_factory <>", value, "fFactory");
            return (Criteria) this;
        }

        public Criteria andFFactoryGreaterThan(String value) {
            addCriterion("f_factory >", value, "fFactory");
            return (Criteria) this;
        }

        public Criteria andFFactoryGreaterThanOrEqualTo(String value) {
            addCriterion("f_factory >=", value, "fFactory");
            return (Criteria) this;
        }

        public Criteria andFFactoryLessThan(String value) {
            addCriterion("f_factory <", value, "fFactory");
            return (Criteria) this;
        }

        public Criteria andFFactoryLessThanOrEqualTo(String value) {
            addCriterion("f_factory <=", value, "fFactory");
            return (Criteria) this;
        }

        public Criteria andFFactoryLike(String value) {
            addCriterion("f_factory like", value, "fFactory");
            return (Criteria) this;
        }

        public Criteria andFFactoryNotLike(String value) {
            addCriterion("f_factory not like", value, "fFactory");
            return (Criteria) this;
        }

        public Criteria andFFactoryIn(List<String> values) {
            addCriterion("f_factory in", values, "fFactory");
            return (Criteria) this;
        }

        public Criteria andFFactoryNotIn(List<String> values) {
            addCriterion("f_factory not in", values, "fFactory");
            return (Criteria) this;
        }

        public Criteria andFFactoryBetween(String value1, String value2) {
            addCriterion("f_factory between", value1, value2, "fFactory");
            return (Criteria) this;
        }

        public Criteria andFFactoryNotBetween(String value1, String value2) {
            addCriterion("f_factory not between", value1, value2, "fFactory");
            return (Criteria) this;
        }

        public Criteria andFParamIsNull() {
            addCriterion("f_param is null");
            return (Criteria) this;
        }

        public Criteria andFParamIsNotNull() {
            addCriterion("f_param is not null");
            return (Criteria) this;
        }

        public Criteria andFParamEqualTo(String value) {
            addCriterion("f_param =", value, "fParam");
            return (Criteria) this;
        }

        public Criteria andFParamNotEqualTo(String value) {
            addCriterion("f_param <>", value, "fParam");
            return (Criteria) this;
        }

        public Criteria andFParamGreaterThan(String value) {
            addCriterion("f_param >", value, "fParam");
            return (Criteria) this;
        }

        public Criteria andFParamGreaterThanOrEqualTo(String value) {
            addCriterion("f_param >=", value, "fParam");
            return (Criteria) this;
        }

        public Criteria andFParamLessThan(String value) {
            addCriterion("f_param <", value, "fParam");
            return (Criteria) this;
        }

        public Criteria andFParamLessThanOrEqualTo(String value) {
            addCriterion("f_param <=", value, "fParam");
            return (Criteria) this;
        }

        public Criteria andFParamLike(String value) {
            addCriterion("f_param like", value, "fParam");
            return (Criteria) this;
        }

        public Criteria andFParamNotLike(String value) {
            addCriterion("f_param not like", value, "fParam");
            return (Criteria) this;
        }

        public Criteria andFParamIn(List<String> values) {
            addCriterion("f_param in", values, "fParam");
            return (Criteria) this;
        }

        public Criteria andFParamNotIn(List<String> values) {
            addCriterion("f_param not in", values, "fParam");
            return (Criteria) this;
        }

        public Criteria andFParamBetween(String value1, String value2) {
            addCriterion("f_param between", value1, value2, "fParam");
            return (Criteria) this;
        }

        public Criteria andFParamNotBetween(String value1, String value2) {
            addCriterion("f_param not between", value1, value2, "fParam");
            return (Criteria) this;
        }

        public Criteria andFNumIsNull() {
            addCriterion("f_num is null");
            return (Criteria) this;
        }

        public Criteria andFNumIsNotNull() {
            addCriterion("f_num is not null");
            return (Criteria) this;
        }

        public Criteria andFNumEqualTo(Integer value) {
            addCriterion("f_num =", value, "fNum");
            return (Criteria) this;
        }

        public Criteria andFNumNotEqualTo(Integer value) {
            addCriterion("f_num <>", value, "fNum");
            return (Criteria) this;
        }

        public Criteria andFNumGreaterThan(Integer value) {
            addCriterion("f_num >", value, "fNum");
            return (Criteria) this;
        }

        public Criteria andFNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("f_num >=", value, "fNum");
            return (Criteria) this;
        }

        public Criteria andFNumLessThan(Integer value) {
            addCriterion("f_num <", value, "fNum");
            return (Criteria) this;
        }

        public Criteria andFNumLessThanOrEqualTo(Integer value) {
            addCriterion("f_num <=", value, "fNum");
            return (Criteria) this;
        }

        public Criteria andFNumIn(List<Integer> values) {
            addCriterion("f_num in", values, "fNum");
            return (Criteria) this;
        }

        public Criteria andFNumNotIn(List<Integer> values) {
            addCriterion("f_num not in", values, "fNum");
            return (Criteria) this;
        }

        public Criteria andFNumBetween(Integer value1, Integer value2) {
            addCriterion("f_num between", value1, value2, "fNum");
            return (Criteria) this;
        }

        public Criteria andFNumNotBetween(Integer value1, Integer value2) {
            addCriterion("f_num not between", value1, value2, "fNum");
            return (Criteria) this;
        }

        public Criteria andFPriceIsNull() {
            addCriterion("f_price is null");
            return (Criteria) this;
        }

        public Criteria andFPriceIsNotNull() {
            addCriterion("f_price is not null");
            return (Criteria) this;
        }

        public Criteria andFPriceEqualTo(Double value) {
            addCriterion("f_price =", value, "fPrice");
            return (Criteria) this;
        }

        public Criteria andFPriceNotEqualTo(Double value) {
            addCriterion("f_price <>", value, "fPrice");
            return (Criteria) this;
        }

        public Criteria andFPriceGreaterThan(Double value) {
            addCriterion("f_price >", value, "fPrice");
            return (Criteria) this;
        }

        public Criteria andFPriceGreaterThanOrEqualTo(Double value) {
            addCriterion("f_price >=", value, "fPrice");
            return (Criteria) this;
        }

        public Criteria andFPriceLessThan(Double value) {
            addCriterion("f_price <", value, "fPrice");
            return (Criteria) this;
        }

        public Criteria andFPriceLessThanOrEqualTo(Double value) {
            addCriterion("f_price <=", value, "fPrice");
            return (Criteria) this;
        }

        public Criteria andFPriceIn(List<Double> values) {
            addCriterion("f_price in", values, "fPrice");
            return (Criteria) this;
        }

        public Criteria andFPriceNotIn(List<Double> values) {
            addCriterion("f_price not in", values, "fPrice");
            return (Criteria) this;
        }

        public Criteria andFPriceBetween(Double value1, Double value2) {
            addCriterion("f_price between", value1, value2, "fPrice");
            return (Criteria) this;
        }

        public Criteria andFPriceNotBetween(Double value1, Double value2) {
            addCriterion("f_price not between", value1, value2, "fPrice");
            return (Criteria) this;
        }

        public Criteria andFInventoryIsNull() {
            addCriterion("f_inventory is null");
            return (Criteria) this;
        }

        public Criteria andFInventoryIsNotNull() {
            addCriterion("f_inventory is not null");
            return (Criteria) this;
        }

        public Criteria andFInventoryEqualTo(Integer value) {
            addCriterion("f_inventory =", value, "fInventory");
            return (Criteria) this;
        }

        public Criteria andFInventoryNotEqualTo(Integer value) {
            addCriterion("f_inventory <>", value, "fInventory");
            return (Criteria) this;
        }

        public Criteria andFInventoryGreaterThan(Integer value) {
            addCriterion("f_inventory >", value, "fInventory");
            return (Criteria) this;
        }

        public Criteria andFInventoryGreaterThanOrEqualTo(Integer value) {
            addCriterion("f_inventory >=", value, "fInventory");
            return (Criteria) this;
        }

        public Criteria andFInventoryLessThan(Integer value) {
            addCriterion("f_inventory <", value, "fInventory");
            return (Criteria) this;
        }

        public Criteria andFInventoryLessThanOrEqualTo(Integer value) {
            addCriterion("f_inventory <=", value, "fInventory");
            return (Criteria) this;
        }

        public Criteria andFInventoryIn(List<Integer> values) {
            addCriterion("f_inventory in", values, "fInventory");
            return (Criteria) this;
        }

        public Criteria andFInventoryNotIn(List<Integer> values) {
            addCriterion("f_inventory not in", values, "fInventory");
            return (Criteria) this;
        }

        public Criteria andFInventoryBetween(Integer value1, Integer value2) {
            addCriterion("f_inventory between", value1, value2, "fInventory");
            return (Criteria) this;
        }

        public Criteria andFInventoryNotBetween(Integer value1, Integer value2) {
            addCriterion("f_inventory not between", value1, value2, "fInventory");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fan
     *
     * @mbggenerated do_not_delete_during_merge Mon Aug 07 22:26:32 CST 2023
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fan
     *
     * @mbggenerated Mon Aug 07 22:26:32 CST 2023
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}